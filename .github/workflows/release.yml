name: Release binaries

on:
  release:
    types:
      - created

env:
  GO_VERSION: ^1.19.1

jobs:
  release:
    name: Release binaries
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [386, amd64, arm, arm64]
        exclude:
          - goos: darwin
            goarch: 386
          - goos: darwin
            goarch: arm

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build
        run: env GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -ldflags="-X 'main.version=${{ github.event.release.tag_name }}'"

      - name: Create tarball
        if: ${{ matrix.goos != "windows" }}
        run: tar --transform 's/.*\///g' -czvf autovpn.tar.gz autovpn README.md LICENSE default.config.yml

      - name: Upload tarball
        if: ${{ matrix.goos != "windows" }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: autovpn.tar.gz
          asset_name: autovpn_${{ github.event.release.tag_name }}_${{ matrix.goos }}_${{ matrix.goarch }}.tar.gz
          asset_content_type: application/gzip

      - name: Create zipfile
        if: ${{ matrix.goos == "windows" }}
        run: zip autovpn.zip autovpn.exe README.md LICENSE default.config.yml

      - name: Upload zipfile
        if: ${{ matrix.goos == "windows" }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: autovpn.zip
          asset_name: autovpn_${{ github.event.release.tag_name }}_${{ matrix.goos }}_${{ matrix.goarch }}.zip
          asset_content_type: application/zip
